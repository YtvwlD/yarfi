#!/usr/bin/env python

# YARFI - Yet Another Replacement For Init
# Copyright (C) 2014 Niklas Sombert
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

print ("yarfi Copyright (C) 2014 Niklas Sombert")
print ("This program comes with ABSOLUTELY NO WARRANTY.")
print ("This is free software, and you are welcome to redistribute it")
print ("under certain conditions.")

import sys
from PySide.QtCore import QTimer
from subprocess import Popen
from signal import signal, SIGINT

sys.path[0] = "/etc/yarfi"

# yarfi's own:
from yarfi.DBusService import DBusService
from yarfi.service import YARFI

Popen(["/sbin/ctrlaltdel", "soft"]).wait()

wanted_target = ""
debug = False
with open("/proc/cmdline") as cmdline:
	line = cmdline.read()
	line = line.replace("\n", "")
	params = line.split(" ")
	for x in params:
		z = x.split("=")
		if z[0] == "yarfi-target":
			wanted_target = z[1]
		if z[0] == "yarfi-debug":
			debug = True
simulate = "simulate" in sys.argv
if wanted_target == "":
	wanted_target = "default"

yarfi = YARFI(debug, simulate)
	
yarfi.reach_target(wanted_target)

signal(SIGINT, lambda *a: yarfi.reach_target("reboot"))

def createDBusService():
	DBusService(yarfi)

QTimer.singleShot(5000, createDBusService) #wait a few second so that the D-Bus daemon should be ready
yarfi.exec_()
